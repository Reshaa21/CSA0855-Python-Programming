def isIsomorphic(s, t):
    # If the lengths of the strings are not equal, they can't be isomorphic
    if len(s) != len(t):
        return False
    
    # Dictionaries to store character mappings
    s_to_t = {}
    t_to_s = {}
    
    # Iterate through each character in the strings
    for char_s, char_t in zip(s, t):
        # Check if there's already a mapping from char_s to a different character
        if char_s in s_to_t:
            if s_to_t[char_s] != char_t:
                return False
        else:
            s_to_t[char_s] = char_t
        
        # Check if there's already a mapping from char_t to a different character
        if char_t in t_to_s:
            if t_to_s[char_t] != char_s:
                return False
        else:
            t_to_s[char_t] = char_s
    
    # If no conflicts were found, the strings are isomorphic
    return True

# Test Case 1
s = "egg"
t = "add"
print(isIsomorphic(s, t))  # Output: True
